name: Zip and Dump Studies to S3

on:
  workflow_dispatch:
  branches:
    - master
  paths:
    - 'crdc/gdc/**'
    - 'public/**'

jobs:
  zip_and_s3_dump:
    if: github.repository == 'cbioportal/datahub'
    runs-on: ubuntu-latest
    env:
      SAML2AWS_VER: '2.36.18'
      AWS_PROFILE: 'default'
      AWS_REGION: 'us-east-1'
    steps:
      - name: Install saml2aws
        run: |
          wget -O saml2aws.tar.gz https://github.com/Versent/saml2aws/releases/download/v${SAML2AWS_VER}/saml2aws_${SAML2AWS_VER}_linux_amd64.tar.gz
          tar -xzvf saml2aws.tar.gz
          sudo mv saml2aws /usr/local/bin/
          chmod +x /usr/local/bin/saml2aws
          saml2aws --version
      - name: Configure saml2aws
        run: |
          saml2aws configure \
            --idp-provider="${{ secrets.SAML_IDP_PROVIDER }}" \
            --mfa="${{ secrets.SAML_MFA }}" \
            --url="${{ secrets.SAML_URL }}" \
            --username="${{ secrets.SAML_USERNAME }}" \
            --aws-urn="${{ secrets.SAML_AWS_URN }}" \
            --session-duration="${{ secrets.SAML_SESSION_DURATION }}" \
            --skip-prompt \
            --profile="${{ env.AWS_PROFILE }}"
      - uses: actions/checkout@v5
        with:
          ref: master
      - name: Zip and dump studies
        env:
          SAML2AWS_USERNAME: ${{ secrets.SAML_USERNAME }}
          SAML2AWS_PASSWORD: ${{ secrets.SAML_PASSWORD }}
          SAML2AWS_ROLE: ${{ secrets.SAML_ROLE }}
          STUDY_PATH_FILENAME: study_paths.txt
          STUDY_LIST_FILENAME: study_list.json
          SAVED_GIT_REPO_FILENAME: save_git.tar
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_EC2_METADATA_DISABLED: "true" # fixes aws cli error (code 255); needed since ubuntu-latest v2.262.1
        run: |
          # Login to saml
          saml2aws login \
            --force \
            --skip-prompt
          
          # detecting modified studies and archiving them
          # create a list of all studies under 'public'
          echo creating ${STUDY_LIST_FILENAME}
          echo "[" > ${STUDY_LIST_FILENAME}
          first_study=1
          find crdc/gdc -type d -mindepth 1 -maxdepth 1 | sort > ${STUDY_PATH_FILENAME}
          find public -type d -mindepth 1 -maxdepth 1 | sort >> ${STUDY_PATH_FILENAME}
          studypaths=()
          while read studypath ; do
            if [ ${first_study} -ne 1 ] ; then
              echo "," >> ${STUDY_LIST_FILENAME}
            fi
            studypaths+=("$studypath")
            studyname=$(basename "$studypath")
            echo -n "\"${studyname}\"" >> ${STUDY_LIST_FILENAME}
            first_study=0
          done < ${STUDY_PATH_FILENAME}
          rm -f ${STUDY_PATH_FILENAME}
          echo "" >> ${STUDY_LIST_FILENAME}
          echo "]" >> ${STUDY_LIST_FILENAME}
          # copy study list file to S3
          echo copying ${STUDY_LIST_FILENAME} to S3
          aws s3 cp "${{ env.STUDY_LIST_FILENAME }}" "s3://${{ secrets.S3_BUCKET }}/"
          rm -f ${STUDY_LIST_FILENAME}
          # first save .git
          tar -cvf ${SAVED_GIT_REPO_FILENAME} .git > /dev/null
          mkdir studies_to_upload
          for studypath in "${studypaths[@]}"; do
            if [ ! -d "${studypath}" ]; then
              continue
            fi
            study=$(basename "$studypath")
            study_dir=$(dirname "$studypath")
            echo "Pulling study: ${studypath}."
            git lfs pull --include="${studypath}"
            echo "Compressing this study: ${studypath}."
            tar -czvf studies_to_upload/${study}.tar.gz -C ${study_dir} ${study}
            echo "Copy file to S3: studies_to_upload/${study}.tar.gz"
            aws s3 cp studies_to_upload/${study}.tar.gz s3://${{ secrets.S3_BUCKET }}/
            echo "Remove this directory: ${studypath}."
            rm -rf "${studypath}"
            echo "Remove this file: studies_to_upload/${study}.tar.gz."
            rm studies_to_upload/${study}.tar.gz
            echo "Remove .git"
            rm -rf .git
            # add original .git back
            tar -xf ${SAVED_GIT_REPO_FILENAME} > /dev/null
          done