name: Zip studies on push to master branch
on:
  # Trigger the workflow on push,
  # but only for the master branch
  # TODO: only trigger on the cbioportal repo
  push:
    branches:
      - zip-study-on-push-github-action
    paths:
      - 'public/**'
jobs:
  zip_studies:
    if: github.repository == 'cbioportal/datahub'
    runs-on: ubuntu-latest
    timeout-minutes: 1440
    steps:
    - id: files
      uses: jitterbit/get-changed-files@v1
    - run: | # TODO remove step
        echo ${{ steps.files.outputs.all }}
        exit 0
    - run: |
        echo "##[set-output name=unique_studies_list;]$(echo "${{ steps.files.outputs.all }}" | awk 'BEGIN { RS=" "; FS="/"; ORS=" " } { set[$2]++ } END { for (dir in set) { print dir } }')"
        exit 0
      id: unique_studies
    - run: | # TODO remove step
        echo ${{ steps.unique_studies.outputs.unique_studies_list }}
        exit 0
    - run: |
        git --version
        exit 0
    - uses: actions/checkout@v2
    #  with:
    #    lfs: 'true'
    - run: |
        # first save .git
        tar -cvf savegit.tar .git
        mkdir studies_to_upload
        cd public
        for changed_study in ${{ steps.unique_studies.outputs.unique_studies_list }}; do
          echo "Pulling study: ${changed_study}."
          git lfs pull --include="${changed_study}"
          echo "Compressing this study: ${changed_study}."
          tar -czvf ../studies_to_upload/${changed_study}.tar.gz ${changed_study}
          echo "Copy file to S3: ../studies_to_upload/${changed_study}.tar.gz"
          aws s3 cp --acl public-read ../studies_to_upload/${changed_study}.tar.gz s3://${AWS_S3_BUCKET}/
          echo "Remove this directory: ${changed_study}."
          rm -rf "${changed_study}"
          echo "Remove this file: ../studies_to_upload/${changed_study}.tar.gz."
          rm ../studies_to_upload/${changed_study}.tar.gz
          echo "Remove rm -rf .git"
          cd ..
          rm -rf .git
          # add original .git back
          tar -xf savegit.tar
          cd public
        done
        cd ..
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
